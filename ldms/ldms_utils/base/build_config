#!/bin/bash

STREAM_NUM=$1
STREAM_PORT=$2
HOSTNAME=$3
HOST_PORT=$4
LDMSD_COLLECTION_PERIOD=$5

count=1
HOST_DESCRIPTION=STREAM${1}_$(($count + 0))
TRANSPORT=sock
DOWNHOST=emptyhost


CTRLHOST_PATH_TO_GENERATED_SCRIPTS="$(cat ldms_base_config | grep "CTRLHOST" | cut -d , -f5 | sed 's/^[ \t]*//')"
#echo "CTRLHOST_PATH_TO_GENERATED_SCRIPTS = $CTRLHOST_PATH_TO_GENERATED_SCRIPTS"

if [[ $HOSTNAME != "finish" ]]; then
	HOST="$(cat ldms_base_config | grep $HOST_DESCRIPTION | cut -d , -f2 | sed 's/^[ \t]*//')"
	LDMS_TYPE="$(cat ldms_base_config | grep $HOST_DESCRIPTION | cut -d , -f3 | sed 's/^[ \t]*//')"
#	echo "In != finish, Stream_num = $STREAM_NUM, Host_description = $HOST_DESCRIPTION, Host = $HOST, Port = $HOST_PORT"
	echo "active $HOSTNAME $HOST_PORT $TRANSPORT $LDMSD_COLLECTION_PERIOD" >> $CTRLHOST_PATH_TO_GENERATED_SCRIPTS/configs/${HOST}_${STREAM_PORT}.cfg
else
	while [[ $DOWNHOST != "none" ]]; do
		HOST_DESCRIPTION=STREAM$1"_$(($count + 0))"
		UPHOST_DESCRIPTION=STREAM$1"_$(($count - 1))"
		DOWNHOST_DESCRIPTION=STREAM$1"_$(($count + 1))"

		HOST="$(cat ldms_base_config | grep $HOST_DESCRIPTION | cut -d , -f2 | sed 's/^[ \t]*//')"
		HOST_PATH_TO_SCRIPTS="$(cat ldms_base_config | grep $HOST_DESCRIPTION | cut -d , -f4 | sed 's/^[ \t]*//')"
		HOST_PATH_TO_LDMS_LIBS="$(cat ldms_base_config | grep $HOST_DESCRIPTION | cut -d , -f5 | sed 's/^[ \t]*//')"
		HOST_PATH_TO_LDMS_EXE="$(cat ldms_base_config | grep $HOST_DESCRIPTION | cut -d , -f6 | sed 's/^[ \t]*//')"
		HOST_PATH_TO_LDMS_LOGS="$(cat ldms_base_config | grep $HOST_DESCRIPTION | cut -d , -f7 | sed 's/^[ \t]*//')"
		UP_HOST_CONNECTION="$(cat ldms_base_config | grep $HOST_DESCRIPTION | cut -d , -f8 | sed 's/^[ \t]*//')"
		HOST_IP_ADDRESS="$(cat ldms_base_config | grep $HOST_DESCRIPTION | cut -d , -f9 | sed 's/^[ \t]*//')"
		LDMS_TYPE="$(cat ldms_base_config | grep $HOST_DESCRIPTION | cut -d , -f3 | sed 's/^[ \t]*//')"

                LS_FILENAME=${HOST}_ldms_ls
                LAUNCH_FILENAME=${HOST}_ldms_launch_script

		if [[ $count = "1" ]]; then
			UPHOST=none
		else
			UPHOST="$(cat ldms_base_config | grep $UPHOST_DESCRIPTION | cut -d , -f2 | sed 's/^[ \t]*//')"
		fi

		DOWNHOST="$(cat ldms_base_config | grep $DOWNHOST_DESCRIPTION | cut -d , -f2 | sed 's/^[ \t]*//')"
		if [[ -z $DOWNHOST ]]; then DOWNHOST=none; fi

		if [[ $UPHOST = "none" ]]; then
			if [[ $LDMS_TYPE = "bridge" ]]; then
				echo "bridge $DOWNHOST $HOST_PORT sock 1000000" >> $CTRLHOST_PATH_TO_GENERATED_SCRIPTS/configs/${HOST}_${STREAM_PORT}.cfg
			fi
		else 
			if [[ $LDMS_TYPE != "bridge" ]]; then
				echo "$LDMS_TYPE $UP_HOST_CONNECTION $STREAM_PORT sock 1000000" >> $CTRLHOST_PATH_TO_GENERATED_SCRIPTS/configs/${HOST}_${STREAM_PORT}.cfg
			elif [[ $LDMS_TYPE = "bridge" ]]; then
				echo "active $UP_HOST_CONNECTION $STREAM_PORT sock 1000000" >> $CTRLHOST_PATH_TO_GENERATED_SCRIPTS/configs/${HOST}_${STREAM_PORT}.cfg
				if [[ $DOWNHOST != none ]]; then
					echo "$LDMS_TYPE $DOWNHOST $STREAM_PORT sock 1000000" >> $CTRLHOST_PATH_TO_GENERATED_SCRIPTS/configs/${HOST}_${STREAM_PORT}.cfg
				else
					echo "Error in ldms_base_config: Last host in a communication stream cannot be a "bridge" host"
				fi
			fi
		fi

################################################################################
# Stuff appropriate lines into utility scripts here
################################################################################
		socknum=$(($count %2))
		echo "${HOST_PATH_TO_LDMS_EXE}/ldmsd -x sock:$STREAM_PORT -i $LDMSD_COLLECTION_PERIOD -C $HOST_PATH_TO_SCRIPTS/configs/$HOST"_$STREAM_PORT".cfg -l ${HOST_PATH_TO_LDMS_LOGS}/ldmsd.log >> /dev/null 2>&1 &" >> $CTRLHOST_PATH_TO_GENERATED_SCRIPTS/utils/$HOST/$LAUNCH_FILENAME
		echo "sleep 0.1" >> $CTRLHOST_PATH_TO_GENERATED_SCRIPTS/utils/$HOST/$LAUNCH_FILENAME
		echo "${HOST_PATH_TO_LDMS_EXE}/ldms_ls -h localhost -x sock -p $STREAM_PORT \$1" >> $CTRLHOST_PATH_TO_GENERATED_SCRIPTS/utils/$HOST/$LS_FILENAME


	count=$(($count + 1))
	done
fi



