#!/bin/bash

#CTRLHOST_PATH_TO_LDMS_BASE="$(cat ldms_base_config | grep "CTRLHOST" | cut -d , -f4 | sed 's/^[ \t]*//')"
CTRLHOST_PATH_TO_GENERATED_SCRIPTS="$(cat ldms_base_config | grep "CTRLHOST" | cut -d , -f5 | sed 's/^[ \t]*//')"
CTRLHOST_PATH_TO_LDMS_LIBS="$(cat ldms_base_config | grep "CTRLHOST" | cut -d , -f6 | sed 's/^[ \t]*//')"
CTRLHOST_PATH_TO_LDMS_EXE="$(cat ldms_base_config | grep "CTRLHOST" | cut -d , -f7 | sed 's/^[ \t]*//')"
CTRLHOST_PATH_TO_LDMS_LOGS="$(cat ldms_base_config | grep "CTRLHOST" | cut -d , -f8 | sed 's/^[ \t]*//')"

SHARED_HOST="$(cat ldms_base_config | grep "SHARED" | cut -d , -f2 | sed 's/^[ \t]*//')"
SHARED_PATH_TO_SCRIPTS="$(cat ldms_base_config | grep "SHARED" | cut -d , -f4 | sed 's/^[ \t]*//')"
SHARED_PATH_TO_LDMS_LIBS="$(cat ldms_base_config | grep "SHARED" | cut -d , -f5 | sed 's/^[ \t]*//')"
SHARED_PATH_TO_LDMS_EXE="$(cat ldms_base_config | grep "SHARED" | cut -d , -f6 | sed 's/^[ \t]*//')"
SHARED_PATH_TO_LDMS_LOGS="$(cat ldms_base_config | grep "SHARED" | cut -d , -f7 | sed 's/^[ \t]*//')"
SHARED_PATH_TO_KERNEL_MODULES="$(cat ldms_base_config | grep "SHARED" | cut -d , -f8 | sed 's/^[ \t]*//')"

DOWNHOST=emptyhost

NUM_STREAMS="$(cat ldms_base_config | grep "NUM_STREAMS" | cut -d , -f2 | sed 's/^[ \t]*//')"

if [[ -z $CTRLHOST_PATH_TO_GENERATED_SCRIPTS || -z $CTRLHOST_PATH_TO_LDMS_LIBS || -z $CTRLHOST_PATH_TO_LDMS_EXE || -z $CTRLHOST_PATH_TO_LDMS_LOGS ]]; then
   echo "CTRLHOST paths not defined... Aborting execution"
   exit
else
   rm -rf $CTRLHOST_PATH_TO_GENERATED_SCRIPTS
   mkdir -p $CTRLHOST_PATH_TO_GENERATED_SCRIPTS
   mkdir -p $CTRLHOST_PATH_TO_GENERATED_SCRIPTS/configs; rm -rf $CTRLHOST_PATH_TO_SCRIPTS/configs/*
   mkdir -p $CTRLHOST_PATH_TO_GENERATED_SCRIPTS/utils; rm -rf $CTRLHOST_PATH_TO_SCRIPTS/utils/*
#   mkdir -p $CTRLHOST_PATH_TO_LDMS_LOGS; rm $CTRLHOST_PATH_TO_LDMS_LOGS/*
fi

if [[ -z $SHARED_HOST || -z $SHARED_PATH_TO_LDMS_LIBS || -z $SHARED_PATH_TO_LDMS_EXE || -z $SHARED_PATH_TO_LDMS_LOGS ]]; then
   echo "Shared host is not defined."
   exit
#else
#  echo "ssh $SHARED_HOST \"mkdir -p $SHARED_PATH_TO_LDMS_LOGS; rm $SHARED_PATH_TO_LDMS_LOGS/*\""
fi

for (( j=1; j<=$NUM_STREAMS; j++ ))
do
	count=1
	STREAM_NUM=STREAM${j},
	HOST=true
	while [[ $HOST = "true" ]]; do
                HOST_DESCRIPTION=STREAM${j}_$(($count + 0))
		DOWNHOST_DESCRIPTION=STREAM${j}_$(($count + 1))
		DOWNHOST="$(cat ldms_base_config | grep $DOWNHOST_DESCRIPTION | cut -d , -f2 | sed 's/^[ \t]*//')"
                if [[ -z $DOWNHOST ]]; then DOWNHOST=none; fi

                HOST="$(cat ldms_base_config | grep $HOST_DESCRIPTION | cut -d , -f2 | sed 's/^[ \t]*//')"
		if [[ -z $HOST ]]; then HOST=false; break; fi
                PATH_TO_SCRIPTS="$(cat ldms_base_config | grep $HOST_DESCRIPTION | cut -d , -f4 | sed 's/^[ \t]*//')"
                PATH_TO_LDMS_LIBS="$(cat ldms_base_config | grep $HOST_DESCRIPTION | cut -d , -f5 | sed 's/^[ \t]*//')"
                PATH_TO_LDMS_EXE="$(cat ldms_base_config | grep $HOST_DESCRIPTION | cut -d , -f6 | sed 's/^[ \t]*//')"
                PATH_TO_LDMS_LOGS="$(cat ldms_base_config | grep $HOST_DESCRIPTION | cut -d , -f7 | sed 's/^[ \t]*//')"
                HOST_IP_ADDRESS="$(cat ldms_base_config | grep $HOST_DESCRIPTION | cut -d , -f8 | sed 's/^[ \t]*//')"

		LS_FILENAME=${HOST}_ldms_ls
		LAUNCH_FILENAME=${HOST}_ldms_launch_script
		ENV_FILENAME=${HOST}_env

		NEWDIR=$CTRLHOST_PATH_TO_GENERATED_SCRIPTS/utils/$HOST
		if [ -e $NEWDIR ]; then
#			echo "$NEWDIR already exists"
			true
		else
#			echo "First instance of $NEWDIR so creating"
			mkdir -p $NEWDIR

			echo "#!/bin/bash" > $CTRLHOST_PATH_TO_GENERATED_SCRIPTS/utils/$HOST/$LS_FILENAME
			echo "export LD_LIBRARY_PATH=$PATH_TO_LDMS_LIBS" >> $CTRLHOST_PATH_TO_GENERATED_SCRIPTS/utils/$HOST/$LS_FILENAME
			echo "export LDMS_XPRT_LIBPATH=$PATH_TO_LDMS_LIBS" >> $CTRLHOST_PATH_TO_GENERATED_SCRIPTS/utils/$HOST/$LS_FILENAME 
			chmod +x $CTRLHOST_PATH_TO_GENERATED_SCRIPTS/utils/$HOST/$LS_FILENAME
	
			echo "#!/bin/bash" > $CTRLHOST_PATH_TO_GENERATED_SCRIPTS/utils/$HOST/$LAUNCH_FILENAME
			echo "export LD_LIBRARY_PATH=$PATH_TO_LDMS_LIBS" >> $CTRLHOST_PATH_TO_GENERATED_SCRIPTS/utils/$HOST/$LAUNCH_FILENAME
			echo "export LDMS_XPRT_LIBPATH=$PATH_TO_LDMS_LIBS" >> $CTRLHOST_PATH_TO_GENERATED_SCRIPTS/utils/$HOST/$LAUNCH_FILENAME
			echo "mkdir -p $PATH_TO_LDMS_LOGS" >> $CTRLHOST_PATH_TO_GENERATED_SCRIPTS/utils/$HOST/$LAUNCH_FILENAME
			chmod +x $CTRLHOST_PATH_TO_GENERATED_SCRIPTS/utils/$HOST/$LAUNCH_FILENAME
	
			echo "#!/bin/bash" > $CTRLHOST_PATH_TO_GENERATED_SCRIPTS/utils/$HOST/$ENV_FILENAME
			echo "export LD_LIBRARY_PATH=$PATH_TO_LDMS_LIBS" >> $CTRLHOST_PATH_TO_GENERATED_SCRIPTS/utils/$HOST/$ENV_FILENAME
			echo "export LDMS_XPRT_LIBPATH=$PATH_TO_LDMS_LIBS" >> $CTRLHOST_PATH_TO_GENERATED_SCRIPTS/utils/$HOST/$ENV_FILENAME
			echo "export PATH=${PATH_TO_LDMS_EXE}:\$PATH" >> $CTRLHOST_PATH_TO_GENERATED_SCRIPTS/utils/$HOST/$ENV_FILENAME
			chmod +x $CTRLHOST_PATH_TO_GENERATED_SCRIPTS/utils/$HOST/$ENV_FILENAME
	
		fi
		HOST=true
		count=$((count + 1))
        done

done
