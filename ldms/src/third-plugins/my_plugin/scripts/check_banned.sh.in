#!/bin/bash
#
# check for .la files that will mess up link dependencies.
# most common symptom of .la problems is unresolved symbols
# and/or ldd showing dependencies on /lib/libldms instead
# of on the developers local install.
#
# calling this script with any argument disables the checks.
if test -n "$1"; then
	exit 0
fi
ovis_lib_libdir=@ovis_ldms_libdir@
. $ovis_lib_libdir/ovis-lib-configvars.sh
ovis_ldms_libdir=@ovis_ldms_libdir@
. $ovis_ldms_libdir/ovis-ldms-configvars.sh
# The common case of system libraries will not interfere
# with itself.
case $ovis_lib_libdir,$ovis_ldms_libdir in
/usr/lib,/usr/lib) exit 0
	;;
/usr/lib64,/usr/lib64) exit 0
	;;
esac

sysdirs=`cat << EOF | sort -u
$ovis_lib_libdir
$ovis_ldms_libdir
EOF
`

plugdirs=`cat << EOF | sort -u
$ovis_lib_pkglibdir
$ovis_ldms_pkglibdir
EOF
`

# fixme: these need to be expanded for sos-ldms related bits.
sysblacklist="
libcoll.la
libldms.la
libldms_store_csv_common.la
libparse_stat.la
libplugattr.la
libsampler_base.la
librequest.la
libldmsd_stream.la
libmmalloc.la
libovis_auth.la
libovis_ctrl.la
libovis_event.la
libovis_third.la
libovis_util.la
libzap.la
libldms*.la
"

badlibs=""
for i in $sysdirs; do
	for f in $sysblacklist; do
		for g in $f; do
			if test -f $i/$f; then
				badlibs="$badlibs $i/$g"
			fi
		done
	done
done

badplugs=""
for i in $plugdirs; do
	for f in $i/*.la none; do
		if test "$f" = "none"; then
			continue
		fi
		if test -f $i/$f; then
			badplugs="$badplugs $i/$f"
		fi
	done
done

err=0
if test -n "$badlibs"; then
	err=1
	echo "##############################"
	echo Unless you will be installing the plugin with these,
	echo the following will almost certainly cause mis-linkage:
	for i in $badlibs; do
		echo $i;
	done
	echo "They should be removed, possibly with @abs_top_builddir@/scripts/rm_banned.sh"
	echo "##############################"
fi
if test -n "$badplugs"; then
	# we may want to set err=1 here eventually
	echo "##############################"
	echo the following might cause mis-linkage:
	for i in $badplugs; do
		echo $i;
	done
	echo "##############################"
fi
if test $err = "0"; then
	echo "libs look ok (no .la files we know were spotted)"
fi
exit $err
